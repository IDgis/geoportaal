# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET		/										controllers.Index.index(text ?= "", supplier ?= "none", status ?= "none", dateCreateStart ?= "", dateCreateEnd ?= "", dateUpdateStart ?= "", dateUpdateEnd ?= "", sort ?= "dateDesc", checked ?= "")
GET		/user/login								controllers.User.login(r: String)
GET		/user/logout							controllers.User.logout()
POST	/user/authenticate						controllers.User.authenticate()
GET		/password/edit							controllers.User.renderChangePassword()
POST	/user/changepassword					controllers.User.changePassword()
GET		/password/forgot						controllers.User.renderForgotPassword()
POST	/user/forgotPassword					controllers.User.forgotPassword()
GET		/loginhelp								controllers.User.loginHelp()
POST	/addUser								controllers.AddUser.execute()
GET		/create									controllers.Metadata.renderCreateForm(text ?= "", supplier ?= "none", status ?= "none", dateCreateStart ?= "", dateCreateEnd ?= "", dateUpdateStart ?= "", dateUpdateEnd ?= "")
POST	/createSubmit							controllers.Metadata.createSubmit(text ?= "", supplier ?= "none", status ?= "none", dateCreateStart ?= "", dateCreateEnd ?= "", dateUpdateStart ?= "", dateUpdateEnd ?= "")
GET		/edit/:metadataUuid						controllers.Metadata.renderEditForm(metadataUuid: String, text ?= "", supplier ?= "none", status ?= "none", dateCreateStart ?= "", dateCreateEnd ?= "", dateUpdateStart ?= "", dateUpdateEnd ?= "")
POST	/editSubmit/:metadataUuid				controllers.Metadata.editSubmit(metadataUuid: String, text ?= "", supplier ?= "none", status ?= "none", dateCreateStart ?= "", dateCreateEnd ?= "", dateUpdateStart ?= "", dateUpdateEnd ?= "")
POST	/editStatus								controllers.Index.changeStatus()
GET		/editSupplier							controllers.Index.changeSupplier()
GET		/cancel									controllers.Metadata.cancel(text ?= "", supplier ?= "none", status ?= "none", dateCreateStart ?= "", dateCreateEnd ?= "", dateUpdateStart ?= "", dateUpdateEnd ?= "")
GET		/delete									controllers.Index.deleteMetadata()
GET		/attachment/:uuid/:attachmentName		controllers.Attachment.download(uuid: String, attachmentName: String)
POST	/search									controllers.Index.search()
POST	/sort									controllers.Index.sort()
GET		/report									controllers.Report.renderReport()
GET		/api/document/search/:typeApp			controllers.DocumentApi.search(typeApp: String, text ?= "", offset:Long ?= 0, limit:Long ?= 10, sort ?= "dateDesc", typeFilter ?= "", themeFilter ?= "", creationYear:Long ?= 0)
GET		/api/document/types						controllers.DocumentApi.getTypesResearch()
GET		/api/document/themes					controllers.DocumentApi.getThemes()
GET		/api/document/woothemes					controllers.DocumentApi.getWooThemes()
GET		/api/document/:typeApp/:metadataUuid	controllers.DocumentApi.findDocument(typeApp: String, metadataUuid: String)
GET		/dccsv									controllers.Report.writeDcCSV()
GET		/othercsv/:type							controllers.Report.writeOtherCSV(type: String)
POST	/csv									controllers.Report.getCSV()
GET		/help									controllers.Help.renderHelp()
POST	/validate/:metadataUuid					controllers.Metadata.validateForm(metadataUuid: String)
POST	/validate								controllers.Index.validateForm()
->		/metadata/dc/							controllers.DublinCoreMetadata
GET		/metadata/:metadataUuid					controllers.Metadata.getMetadata(metadataUuid: String, noStyle: Boolean ?= false)
GET		/webjars/*file							controllers.WebJarAssets.at(file)
GET		/routes.js								controllers.Index.jsRoutes()

GET		/mockup/dashboard						controllers.Dashboard.renderDashboard()

# Map static resources from the /public folder to the /assets URL path
GET		/assets/*file							controllers.Assets.versioned(path="/public", file: Asset)
